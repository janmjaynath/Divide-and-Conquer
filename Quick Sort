public class Divide_and_Conquer {
    public static void quickSort(int arr[] , int si , int ei){
        //Base case
        if(si>=ei){
            return;
        }

    int pidx = partition(arr,si,ei);
    quickSort(arr, 0 , pidx-1);
    quickSort(arr, pidx+1, ei);

    }
    public static int partition(int arr[] , int si ,int ei){
        int pivot = arr[ei];
        int i = si-1; // to make place for smaller element smaller than pivot


        // sorting and arranging array
        for(int j = si ; j<ei ; j++){
            if(arr[j]<=pivot){
                i++;
                //swap
                int temp = arr[j];
                    arr[j] = arr[i];
                    arr[i] = temp;
            }
        }

        //giving right place to pivot
        i++;
        //swap for pivot
        int temp = pivot;
        arr[ei] = arr[i];
        arr[i] = temp;

        return i;
    }
    public static void printArr(int arr[]) {
        //int n = arr.length;
    for(int i=0; i<arr.length;i++){
            System.out.print(arr[i]+" ");
    }
    System.out.println();
    }
    public  static void main (String[] args){
        int arr[] = {6,3,9,5,1,2};
        quickSort(arr, 0, arr.length-1);
        printArr(arr);
    }

}

public class Divide_and_conquer{
    public static void mergeSort(int arr[] , int si , int ei){
        if(si>=ei){
            return;
        }
        //divide
        int mid = si+(ei-si)/2; 

        //sort
        mergeSort(arr, si, mid);
        mergeSort(arr, mid+1, ei);

        Amerge(arr , si ,mid, ei);
    }

    public static void Amerge(int arr[] , int si , int mid , int ei) {
        int temp [] = new int[ei-si+1];
        int i = si;
        int j = mid+1;
        int k = 0;
        
        while (i<=mid && j<=ei) {
            if(arr[i]<arr[j]) {
                temp[k]=arr[i];
                i++;
            }
            else{
                temp[k] = arr[j];
                j++;
            }
            k++;
        }
        // copy remaining elements of arr[] 
        while(i <= mid) {
            temp[k++] = arr[i++];
             
        }
        while (j<=ei) {
            temp[k++] = arr[j++];  
        }
        for(k=0,i=si; k<temp.length ; k++ ,i++) {
            arr[i] = temp[k];
        }
    }
    public static void printArr(int arr[]) {
            //int n = arr.length;
        for(int i=0; i<arr.length;i++){
                System.out.print(arr[i]+" ");
        }
        System.out.println();
    }
    public static void main(String[] args) {
        int arr[] = {6,3,9,5,1,2,-9};
        mergeSort(arr, 0, arr.length-1);
        printArr(arr);
    }
}
